name: GitHub Actions

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - uses: actions/cache@v3
        with:
          key: modules-${{ hashFiles('package-lock.json') }}
          path: node_modules
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci



    if: github.event_name == 'pull_request' || github.event_name == 'push'

  lint:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Lint
        uses: actions/cache@v3
        with:
          key: node_modules
          path: node_modules
      - run: npm run lint

    if: github.event_name == 'pull_request' || github.event_name == 'push'

  jest:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Run Jest Tests
        uses: actions/cache@v3
        with:
          key: node_modules
          path: node_modules
      - run: npm run test:ci

    if: github.event_name == 'pull_request' || github.event_name == 'push'

  build_apps:
    runs-on: ubuntu-latest
    needs: [install_dependencies, lint, jest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Build Apps
        uses: actions/cache@v3
        with:
          key: node_modules
          path: node_modules
      - run: |
          npm run build
          npm run scully
#      - uses: actions/upload-artifact@v3
#        with:
#          name: build
#          path: dist/static/*
#      - uses: actions/checkout@v3
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: my-artifact

    if: github.event_name == 'pull_request' || github.event_name == 'push'


#  deploy:
#    runs-on: ubuntu-latest
#    needs: build_apps
#
#    if: github.event_name == 'pull_request' || github.event_name == 'push'
#    steps:
#      - name: Set up SSH
#        uses: webfactory/ssh-agent@v0.5.0
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#
#      - name: Deploy
#        run: |
#          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "rm -rf /* && mkdir /static"
#          scp -o StrictHostKeyChecking=no -P ${{ secrets.SSH_PORT }} -r dist/static/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/static
#
#    env:
#      SSH_PORT: ${{ secrets.SSH_PORT }}
#      SSH_USER: ${{ secrets.SSH_USER }}
#      SSH_HOST: ${{ secrets.SSH_HOST }}
